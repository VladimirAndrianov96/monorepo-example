version: '3'

services:
  app:
    container_name: users_backend
    build:
      context: ""
      dockerfile: usersapi/Dockerfile
    ports: 
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - usersapi:/usr/src/app/
    depends_on:
      - live-postgres          
    networks:
      - monorepo_network

  test-service:
    container_name: test_backend
    build:
      context: ""
      dockerfile: testresponseapi/Dockerfile
    ports:
      - "10000:10000"
    restart: unless-stopped
    volumes:
      - usersapi:/usr/src/testapp/
    networks:
      - monorepo_network

  live-postgres:
    image: postgres:latest
    container_name: live_db_postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=users_db
      - DATABASE_HOST=live-postgres
    ports:
      - "5432:5432"
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - monorepo_network
    
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 123456
    depends_on:
      - live-postgres
    ports:
      - "5050:80"
    networks:
      - monorepo_network
    restart: unless-stopped

  nsqlookupd:
    image: nsqio/nsq
    command: >
      /nsqlookupd
      -broadcast-address localhost:4160
    ports:
      - "4160:4160"
      - "4161:4161"

  nsqd:
    image: nsqio/nsq
    command: >
      /nsqd
      -broadcast-address localhost
      -lookupd-tcp-address nsqlookupd:4160
    ports:
      - "4150:4150"
      - "4151:4151"

volumes:
  usersapi:
  database_postgres:                  

# Networks to be created to facilitate communication between containers
networks:
  monorepo_network:
    driver: bridge
